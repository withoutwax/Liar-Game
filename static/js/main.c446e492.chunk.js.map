{"version":3,"sources":["Components/Intro.js","Components/Setting.js","Components/Select.js","Components/Timer.js","Components/Play.js","Components/Finish.js","Components/Game.js","App.js","serviceWorker.js","index.js"],"names":["Intro","props","easterEgg","console","log","setState","easterEggMode","specialCode","input","target","value","state","code01","codeActivated","codeActivatedText","parentCallbackEasterEgg","headlineText","className","onClick","this","style","fontSize","placeholder","onChange","to","PackageJson","version","React","Component","Setting","componentDidMount","globalState","getDataFromDb","fetch","then","data","json","res","apiData","setPlayerNum","event","playerNum","Number","setTimer","timer","spyModeSelect","type","checked","spyNumber","spyMode","setTheme","theme","themeKr","textContent","setSpyNumber","updateGlobalState","parentCallbackState","startGameButton","themeButton","map","key","typeKr","spyModeToggle","name","disabled","button","Select","chosenTheme","food","require","place","occupation","biblecharacter","onnurichanyangteammember","kr","i","length","words","selectData","generateRandomNumber","randomIndex","Math","floor","random","chooseLiar","chooseSpies","spyIndex","indexOf","push","vocab","liar","spy","showCard","id","buttonDisabled","includes","concat","card","displayStatus","playerState","spyState","showCardStatus","resetDisplayStatus","beginGame","nextStage","setVocab","buttonDisabledText","textView","playersCard","nextButton","Timer","globalTimer","seconds","unlimited","timerCheck","startTimer","countDown","clearInterval","setInterval","timerColor","Play","checkTimerEnds","text","displayStatus02","findLiar","liarStatus","status","findLiarButton","element","Finish","liarGuessText","headerText","liarGuess","guess","liarWin","guessCards","word","newGame","headerColor","Game","progressNextStage","stage","updateGlobalVocab","gameView","ReactGoogleAnalytics","initialize","pageview","App","activateEasterEgg","code","setting","basename","exact","path","render","Boolean","window","location","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.c446e492.chunk.js","sourcesContent":["import React from 'react';\nimport \"../scss/Intro.scss\";\nimport PackageJson from '../../package.json';\n\nimport  { Link } from 'react-router-dom';\n\nclass Intro extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            headlineText: 'Game',\n            easterEggMode: false,\n            code01: 'onnuri',\n            codeActivated: false,\n            codeActivatedText: ''\n        }\n    }\n    \n    easterEgg = () => {\n        console.log('You have discovered an Easter Egg 🥚 !');\n        this.setState({ easterEggMode: true });\n    }\n    specialCode = (input) => {\n        if (input.target.value === this.state.code01) {\n            console.log('Activated');\n            this.setState({ \n                codeActivated: true,\n                codeActivatedText: \"온누리 모드 Activated\"\n             });\n             this.props.parentCallbackEasterEgg(this.state.code01);\n        }\n    }\n\n    render() {\n        return (\n            <section className=\"intro-container\">\n                <h1>Liar <span onClick={this.easterEgg} style={{ fontSize: '3rem' }}>{ this.state.headlineText }</span></h1>\n                <p>누가 거짓말을 하고 있을까요?</p>\n                {this.state.easterEggMode ? <input className=\"easterEggInput\" placeholder=\"코드를 입력하세요\" onChange={this.specialCode}></input> : ''}\n                {this.state.codeActivated ? <p className=\"green\">{this.state.codeActivatedText}</p> : ''}\n                <Link to='/setting'>게임하기</Link>\n                <p className=\"version\">version v{PackageJson.version}</p>\n            </section>\n        );\n    }\n}\n\nexport default Intro;","import React from \"react\";\nimport \"../scss/Setting.scss\";\nimport { Link } from \"react-router-dom\";\n\nclass Setting extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      playerNum: 3,\n      timer: 60,\n      spyMode: false,\n      spyNumber: 0,\n      theme: \"\",\n      themeKr: \"\",\n      easterEgg: \"false\",\n      apiData: null\n    };\n  }\n\n  componentDidMount = () => {\n    if (this.props.globalState.easterEgg !== \"\") {\n      this.setState({ easterEgg: this.props.globalState.easterEgg });\n    }\n    // console.log('Easter Egg:', this.props.globalState.easterEgg);\n\n    // Get data from API\n    this.getDataFromDb();\n  };\n  getDataFromDb = () => {\n    fetch(\"https://liar-game-api.withoutwax.now.sh/api/getData\")\n      .then(data => data.json())\n      .then(res => {\n        this.setState({ apiData: res });\n      });\n  };\n\n  setPlayerNum = event => {\n    this.setState({ playerNum: Number(event.target.value) });\n  };\n  setTimer = event => {\n    if (event.target.value === \"unlimited\") {\n      this.setState({ timer: event.target.value });\n    } else {\n      this.setState({ timer: Number(event.target.value) });\n    }\n  };\n  spyModeSelect = event => {\n    // console.log(this.state.spyMode);\n    // console.log(event.target.type);\n    let value =\n      event.target.type === \"checkbox\"\n        ? event.target.checked\n        : event.target.value;\n    if (!value) {\n      this.setState({\n        spyNumber: 0\n      });\n    }\n    this.setState({\n      spyMode: value,\n      spyNumber: 1\n    });\n  };\n  setTheme = event => {\n    // console.log(event.target.textContent);\n    this.setState({\n      theme: event.target.value,\n      themeKr: event.target.textContent\n    });\n  };\n  setSpyNumber = event => {\n    this.setState({\n      spyNumber: event.target.value\n    });\n  };\n\n  updateGlobalState = () => {\n    this.props.parentCallbackState(this.state);\n  };\n\n  render() {\n    // Display 게임 시작! button when the user chooses the theme.\n    let startGameButton =\n      this.state.theme !== \"\" ? (\n        <Link to=\"/game\" onClick={this.updateGlobalState}>\n          게임시작!\n        </Link>\n      ) : (\n        ``\n      );\n\n    let themeButton = [];\n    // After apiData state has value from the API\n    if (this.state.apiData) {\n      // console.log(this.state.apiData.data);\n      themeButton = this.state.apiData.data.map(theme => {\n        // console.log(theme);\n        // theme.type = \"food\"\n        // theme.typeKr = \"음식\"\n        // theme.easterEgg = \"false\"\n        return theme.easterEgg === \"false\" ||\n          theme.easterEgg === this.state.easterEgg ? (\n          <button value={theme.type} onClick={this.setTheme} key={theme.type}>\n            {theme.typeKr}\n          </button>\n        ) : (\n          \"\"\n        );\n      });\n    }\n    // console.log(themeButton);\n    let spyModeSelect =\n      this.state.spyMode && this.state.playerNum >= 5 ? (\n        <label className=\"spy-num\">\n          <select value={this.state.value} onChange={this.setSpyNumber}>\n            <option value=\"1\">1</option>\n            {this.state.playerNum >= 8 ? <option value=\"2\">2</option> : \"\"}\n            {this.state.playerNum >= 12 ? <option value=\"3\">3</option> : \"\"}\n            {this.state.playerNum >= 15 ? <option value=\"4\">4</option> : \"\"}\n            {this.state.playerNum >= 18 ? <option value=\"5\">5</option> : \"\"}\n          </select>\n        </label>\n      ) : (\n        \"\"\n      );\n\n    let spyModeToggle = this.state.playerNum >= 5 ? \"\" : \"disabled\";\n\n    return (\n      <section className=\"setting-container\">\n        <h1>설정 창</h1>\n\n        <form className=\"setting-form\">\n          <label className=\"player-num\">\n            <h2>참여인원:</h2>\n            <select value={this.state.value} onChange={this.setPlayerNum}>\n              <option value=\"3\">3</option>\n              <option value=\"4\">4</option>\n              <option value=\"5\">5</option>\n              <option value=\"6\">6</option>\n              <option value=\"7\">7</option>\n              <option value=\"8\">8</option>\n              <option value=\"9\">9</option>\n              <option value=\"10\">10</option>\n              <option value=\"11\">11</option>\n              <option value=\"12\">12</option>\n              <option value=\"13\">13</option>\n              <option value=\"14\">14</option>\n              <option value=\"15\">15</option>\n              <option value=\"16\">16</option>\n              <option value=\"17\">17</option>\n              <option value=\"18\">18</option>\n              <option value=\"19\">19</option>\n              <option value=\"20\">20</option>\n            </select>\n          </label>\n          <label className=\"set-timer\">\n            <h2>제한시간:</h2>\n            <select value={this.state.value} onChange={this.setTimer}>\n              <option value=\"60\">60 초</option>\n              <option value=\"90\">90 초</option>\n              <option value=\"120\">120 초 (2분)</option>\n              <option value=\"150\">150 초 (2분 30초)</option>\n              <option value=\"180\">180 초 (3분)</option>\n              <option value=\"240\">240 초 (4분)</option>\n              <option value=\"300\">300 초 (5분)</option>\n              <option value=\"unlimited\">무제한</option>\n            </select>\n          </label>\n          <label className=\"spy-mode\">\n            <span className=\"caption\" style={{ fontSize: 1 + \"rem\" }}>\n              **스파이 모드는 5명 이상일 경우 가능합니다!**\n            </span>\n            <br />\n            <div className={`spyNumSelect ${spyModeToggle}`}>\n              스파이 모드:\n              {/* {`스파이 모드: ${this.state.spyMode}`} */}\n              <input\n                name=\"spyMode\"\n                type=\"checkbox\"\n                checked={this.state.spyMode}\n                onChange={this.spyModeSelect}\n                disabled={spyModeToggle}\n              />\n            </div>\n            <br />\n            {spyModeSelect}\n            {/* {`스파이: ${this.state.spyNumber}`} */}\n          </label>\n        </form>\n\n        <div className=\"theme-select\">\n          <h2>주제: {`${this.state.themeKr}`}</h2>\n          {themeButton.map(button => {\n            return button;\n          })}\n        </div>\n\n        <div>{startGameButton}</div>\n      </section>\n    );\n  }\n}\n\nexport default Setting;\n","import React from \"react\";\n\nclass Select extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      playerNum: this.props.globalState.playerNum || 3,\n      spyMode: this.props.globalState.spyMode,\n      spyNumber: this.props.globalState.spyNumber,\n      theme: this.props.globalState.theme || \"food\",\n      vocab: \"\",\n      liar: 1,\n      spy: [],\n      buttonDisabled: [],\n      displayStatus: \"플레이어를 선택해주세요\",\n      buttonDisabledText: \"확인했습니다!\",\n      beginGame: false,\n      showCardStatus: false,\n      easterEgg: \"\",\n      apiData: this.props.globalState.apiData,\n      selectData: null\n    };\n  }\n\n  componentDidMount = () => {\n    // Set Easter Egg\n    if (this.props.globalState.easterEgg !== \"\") {\n      this.setState({ easterEgg: this.props.globalState.easterEgg });\n    }\n\n    // If the API is not present\n    let chosenTheme;\n    let data;\n    if (this.state.apiData === null) {\n      // console.log(\"apidata == null\");\n      chosenTheme = {\n        food: require(\"../data/food.json\"),\n        place: require(\"../data/place.json\"),\n        occupation: require(\"../data/occupation.json\"),\n        biblecharacter: require(\"../data/biblecharacter.json\"),\n        onnurichanyangteammember: require(\"../data/onnurichanyangteammember.json\")\n      };\n      // console.log(chosenTheme[this.state.theme].kr);\n      data = chosenTheme[this.state.theme].kr;\n    } else {\n      // console.log(\"apidata == api\");\n      for (let i = 0; i < this.state.apiData.data.length; i++) {\n        let words = this.state.apiData.data[i];\n        if (words.type === this.state.theme) {\n          // console.log(words);\n          chosenTheme = words.kr;\n        }\n        // chosenTheme = this.state.apiData.data.kr\n      }\n      data = chosenTheme;\n    }\n    this.setState({ selectData: data });\n    this.generateRandomNumber(data);\n  };\n\n  generateRandomNumber = data => {\n    let randomIndex = Math.floor(Math.random() * data.length);\n    let chooseLiar = Math.floor(Math.random() * this.state.playerNum);\n    let chooseSpies = [];\n\n    // eslint-disable-next-line\n    while (chooseSpies.length != this.state.spyNumber) {\n      let spyIndex = Math.floor(Math.random() * this.state.playerNum);\n\n      if (spyIndex !== chooseLiar && chooseSpies.indexOf(spyIndex) === -1) {\n        chooseSpies.push(spyIndex);\n      }\n    }\n\n    this.setState({\n      vocab: data[randomIndex],\n      liar: chooseLiar,\n      spy: chooseSpies\n    });\n  };\n\n  showCard = event => {\n    let button = Number(event.target.id);\n\n    if (this.state.buttonDisabled.includes(button) === false) {\n      this.setState({\n        buttonDisabled: this.state.buttonDisabled.concat(button)\n      });\n    }\n\n    let card = event.target.className;\n\n    if (card.includes(\"no-liar\")) {\n      this.setState({\n        displayStatus: `이번에 선택된 단어는:`,\n        playerState: false\n      });\n    } else if (card.includes(\"spy\")) {\n      this.setState({\n        displayStatus: `당신은`,\n        playerState: true,\n        spyState: true\n      });\n    } else {\n      this.setState({\n        displayStatus: `당신은`,\n        playerState: true,\n        spyState: false\n      });\n    }\n\n    // Hide player select card during check\n    this.setState({\n      showCardStatus: true\n    });\n  };\n\n  resetDisplayStatus = () => {\n    if (this.state.buttonDisabled.length === this.state.playerNum) {\n      // All Player has been selected\n      console.log(\"모든 플레이어가 선택 되었습니다\");\n\n      // Begin Timer\n      this.setState({\n        displayStatus: \"게임이 시작되었습니다!\",\n        beginGame: true\n      });\n      this.props.nextStage(2);\n      this.props.setVocab(this.state.vocab, this.state.selectData);\n    } else {\n      if (this.state.playerNum - this.state.buttonDisabled.length === 1) {\n        console.log(\"One player left\");\n        this.setState({ buttonDisabledText: \"게임 시작!\" });\n      }\n      this.setState({ displayStatus: \"플레이어를 선택해주세요\" });\n    }\n\n    // Show player select card after check\n    this.setState({\n      showCardStatus: false\n    });\n  };\n\n  render() {\n    console.log(this.state.spy, this.state.spyNumber);\n    // console.log(\"PROPS:\", this.props);\n    let defaultText = \"선택하세요\";\n    // console.log(this.state.buttonDisabled.includes(0));\n    // console.log(\"THIS.STATE\", this.state);\n\n    let playersCard = [];\n    for (let i = 0; i < this.state.playerNum; i++) {\n      if (i === this.state.liar) {\n        playersCard.push(\n          <button\n            className={`playersCard liar ${\n              this.state.buttonDisabled.includes(i) ? \"disabled\" : \"\"\n            }`}\n            disabled={this.state.buttonDisabled.includes(i) ? true : false}\n            key={i}\n            id={i}\n            onClick={this.showCard}\n          >\n            {defaultText}\n          </button>\n        );\n      } else if (this.state.spy.indexOf(i) !== -1) {\n        playersCard.push(\n          <button\n            className={`playersCard spy ${\n              this.state.buttonDisabled.includes(i) ? \"disabled\" : \"\"\n            }`}\n            disabled={this.state.buttonDisabled.includes(i) ? true : false}\n            key={i}\n            id={i}\n            onClick={this.showCard}\n          >\n            {defaultText}\n          </button>\n        );\n      } else {\n        playersCard.push(\n          <button\n            className={`playersCard no-liar ${\n              this.state.buttonDisabled.includes(i) ? \"disabled\" : \"\"\n            }`}\n            disabled={this.state.buttonDisabled.includes(i) ? true : false}\n            key={i}\n            id={i}\n            onClick={this.showCard}\n          >\n            {defaultText}\n          </button>\n        );\n      }\n    }\n    console.log(this.state);\n    let textView;\n    if (\n      this.state.buttonDisabled.length > 0 &&\n      this.state.showCardStatus === true\n    ) {\n      if (this.state.playerState) {\n        textView = this.state.spyState ? (\n          <span>\n            <span className=\"red\">스파이</span> 입니다. 이번에 선택된 단어는:\n            <br />\n            <span className=\"green\">{this.state.vocab}</span>\n          </span>\n        ) : (\n          <span className=\"red\">라이어 입니다.</span>\n        );\n      } else {\n        textView = (\n          <span className=\"green\">\n            <br />\n            {this.state.vocab}\n          </span>\n        );\n      }\n    } else {\n      textView = null;\n    }\n    let nextButton =\n      this.state.displayStatus === \"플레이어를 선택해주세요\" ? (\n        ``\n      ) : (\n        <button onClick={this.resetDisplayStatus}>\n          {this.state.buttonDisabledText}\n        </button>\n      );\n\n    return (\n      <div>\n        <div>\n          <h2>\n            {this.state.displayStatus} {textView}\n          </h2>\n          {nextButton}\n        </div>\n        {this.state.showCardStatus ? \"\" : playersCard}\n      </div>\n    );\n  }\n}\n\nexport default Select;\n","import React from 'react';\n\nclass Timer extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            seconds: 60,\n            unlimited: false\n        }\n        this.timer = 0;\n    }\n\n    componentDidMount = () => {\n        if (this.props.globalTimer === \"unlimited\") {\n            this.setState ({\n                seconds: \"시간은 무제한 입니다\",\n                unlimited: true\n            });\n            this.props.timerCheck(false);\n        } else if (this.props.globalTimer === null) {\n            this.setState({seconds: 60})\n            this.startTimer();\n        } else {\n            this.setState({\n                seconds: this.props.globalTimer\n            });\n            this.startTimer();\n        }\n    }\n    \n    countDown = () => {\n        let seconds = this.state.seconds - 1;\n        this.setState({ seconds: seconds });\n\n        if (seconds === 0) {\n            clearInterval(this.timer);\n            this.props.timerCheck(false);\n        }\n    }\n\n    startTimer = () => {\n        this.timer = setInterval(this.countDown, 1000);\n    }\n\n    render() {\n        console.log(this.state);\n        let timerColor = this.state.seconds <= 20 ? \"red\" : \"\";\n        return(\n            <div>\n                <p><span className={timerColor}>{this.state.seconds}</span> {this.state.unlimited ? '' : '초'}</p>\n            </div>\n        );\n    }\n}\n\nexport default Timer;","import React from 'react';\nimport Timer from './Timer';\n\nclass Play extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            displayStatus: \"게임 시작!\",\n            displayStatus02: \"게임이 시작되었습니다! 라이어를 찾아주세요!\",\n            findLiar: false\n        }\n        \n    }\n\n    checkTimerEnds = (timer) => {\n        console.log(\"Check Timer\", timer);\n        let text = \"시간이 다 되었습니다! 라이어를 지목해주세요!\"\n        if (this.props.globalTimer === \"unlimited\") {\n            text = \"준비가 되면 아래의 버튼을 선택하여 진행해주세요.\";\n        }\n        this.setState({\n            displayStatus: text,\n            displayStatus02: \"\",\n            findLiar: true\n        });\n    }\n\n    liarStatus = (status) => {\n        console.log(status.target.value);\n        switch(status.target.value) {\n            case \"liar-found\":\n                this.props.nextStage(3);\n                break;\n            case \"liar-not-found\":\n                this.props.nextStage(4);\n                break;\n            default:\n                this.props.nextStage(4);\n                break;\n        }\n        \n    }\n\n    render() {\n        let findLiarButton01 = <button key=\"1\" value=\"liar-found\" onClick={this.liarStatus}>라이어를 찾았습니다!</button>;\n        let findLiarButton02 = <button key=\"2\" value=\"liar-not-found\" onClick={this.liarStatus}>라이어를 찾지 못했습니다!</button>;\n        let findLiarButton = [findLiarButton01, findLiarButton02];\n        return (\n            <div>\n                <h1>{this.state.displayStatus}</h1>\n                <p>{this.state.displayStatus02}</p>\n                <Timer timerCheck={this.checkTimerEnds} globalTimer={this.props.globalTimer}/>\n                {this.state.findLiar ? findLiarButton.map(element => { return element}) : ''}\n            </div>\n        );\n    }\n}\n\nexport default Play;","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport '../scss/Finish.scss';\n\nclass Finish extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            liarStatus: this.props.liarStatus,\n            vocab: this.props.vocab,\n            theme: this.props.theme,\n            liarGuess: false,\n            liarGuessText: \"\",\n            headerText: \"라이어는 단어를 선택해주세요\",\n            liarWin: true,\n            selectData: this.props.selectData\n        }\n    }\n\n    componentDidMount = () => {\n        if (this.state.liarStatus !== \"found\"){\n            console.log(\"Could not find liar\");\n            this.setState({\n                liarGuessText: \"라이어를 찾지 못하였습니다!\",\n                headerText: \"라이어가 승리하였습니다!\",\n                liarGuess: true\n            });\n        } \n    }\n\n    liarGuess = (guess) => {\n        console.log(guess.target.value, this.state.vocab);\n        if (guess.target.value === this.state.vocab) {\n            this.setState({\n                liarGuessText: \"선택한 단어가 맞습니다!\",\n                headerText: \"라이어가 승리하였습니다!\",\n                liarWin: true\n            });\n        } else {\n            this.setState({\n                liarGuessText: `틀렸습니다! 선택된 단어는: ${this.state.vocab}`,\n                headerText: \"라이어가 패하였습니다!\",\n                liarWin: false\n            });\n        }\n        this.setState({\n            liarGuess: true,\n        });\n    }\n    \n    render() {\n        console.log(this.state);\n        let guessCards = this.state.selectData.map(word => {return <button className=\"guess-cards\" key={word} value={word} onClick={this.liarGuess}>{word}</button>})\n        let newGame = <Link to='/setting'>새 게임하기</Link>\n        console.log(this.state.liarGuess);\n        let headerColor = 'white'\n        if (this.state.liarGuess) {\n            headerColor = this.state.liarWin ? 'green' : 'red';\n        }\n        return (\n            <div className=\"finish-container\">\n                <h2 className={headerColor}>{this.state.headerText}</h2>\n                <p>{this.state.liarGuessText}</p>\n                <div className=\"guess-card-container\">{this.state.liarGuess ? newGame : guessCards}</div>\n            </div>\n        );\n    }\n}\n\nexport default Finish;","import React from \"react\";\nimport Select from \"./Select\";\nimport Play from \"./Play\";\nimport Finish from \"./Finish\";\nimport \"../scss/Game.scss\";\n\nclass Game extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      playerNum: this.props.globalState.playerNum,\n      timer: this.props.globalState.timer,\n      spyMode: this.props.globalState.spyMode,\n      spyNumber: this.props.globalState.spyNumber,\n      theme: this.props.globalState.theme,\n      stage: 1,\n      vocab: \"\",\n      easterEgg: \"\",\n      apiData: this.props.globalState.apiData,\n      selectData: null\n    };\n  }\n\n  componentDidMount = () => {\n    if (this.props.globalState.easterEgg !== \"\") {\n      this.setState({ easterEgg: this.props.globalState.easterEgg });\n    }\n  };\n\n  progressNextStage = stage => {\n    this.setState({ stage: stage });\n  };\n\n  updateGlobalVocab = (vocab, selectData) => {\n    this.setState({\n      vocab: vocab,\n      selectData: selectData\n    });\n  };\n\n  render() {\n    let gameView;\n\n    switch (this.state.stage) {\n      case 1:\n        gameView = (\n          <Select\n            globalState={this.state}\n            nextStage={this.progressNextStage}\n            setVocab={this.updateGlobalVocab}\n          />\n        );\n        break;\n      case 2:\n        gameView = (\n          <Play\n            nextStage={this.progressNextStage}\n            globalTimer={this.state.timer}\n          />\n        );\n        break;\n      case 3:\n        gameView = (\n          <Finish\n            nextStage={this.progressNextStage}\n            liarStatus=\"found\"\n            vocab={this.state.vocab}\n            theme={this.state.theme}\n            selectData={this.state.selectData}\n          />\n        );\n        break;\n      case 4:\n        gameView = (\n          <Finish\n            nextStage={this.progressNextStage}\n            liarStatus=\"not-found\"\n            vocab={this.state.vocab}\n            theme={this.state.theme}\n            selectData={this.state.selectData}\n          />\n        );\n        break;\n      default:\n        gameView = (\n          <Select\n            globalState={this.state}\n            nextStage={this.progressNextStage}\n            setVocab={this.updateGlobalVocab}\n          />\n        );\n        break;\n    }\n\n    return (\n      <div>\n        {/* <h1>게임화면</h1> */}\n        {gameView}\n      </div>\n    );\n  }\n}\n\nexport default Game;\n","import React from \"react\";\nimport { HashRouter, Route } from \"react-router-dom\";\nimport \"./App.scss\";\n\nimport Intro from \"./Components/Intro\";\nimport Setting from \"./Components/Setting\";\nimport Game from \"./Components/Game\";\n\nimport ReactGoogleAnalytics from \"react-ga\";\n\nReactGoogleAnalytics.initialize(\"UA-45795165-2\");\nReactGoogleAnalytics.pageview(\"/\");\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      playerNum: null,\n      timer: null,\n      spyMode: false,\n      spyNumber: 0,\n      theme: \"\",\n      easterEgg: \"\",\n      apiData: null\n    };\n  }\n\n  activateEasterEgg = code => {\n    this.setState({\n      easterEgg: code\n    });\n  };\n\n  updateGlobalState = setting => {\n    this.setState({\n      playerNum: setting.playerNum,\n      timer: setting.timer,\n      spyMode: setting.spyMode,\n      spyNumber: setting.spyNumber,\n      theme: setting.theme,\n      apiData: setting.apiData\n    });\n  };\n\n  render() {\n    return (\n      <HashRouter basename=\"/\">\n        <div className=\"App\">\n          <Route\n            exact\n            path=\"/\"\n            render={props => (\n              <Intro\n                parentCallbackEasterEgg={this.activateEasterEgg}\n                {...props}\n              />\n            )}\n          />\n          <Route\n            path=\"/setting/\"\n            render={props => (\n              <Setting\n                parentCallbackState={this.updateGlobalState}\n                globalState={this.state}\n                {...props}\n              />\n            )}\n          />\n          <Route\n            path=\"/game/\"\n            render={props => <Game globalState={this.state} {...props} />}\n          />\n        </div>\n      </HashRouter>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n// import './Main.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}